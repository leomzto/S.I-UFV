Aula Pr치tica 10

Nome: Leonardo Padovani Manzato
Matricula: 9862

Ex1: 

==============

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

int EhVogal(char c);

int main(void)
{
  char *arq = malloc(50 * sizeof(char));
  if(arq == NULL)
  {
    printf("Falha ao alocar mem칩ria.\n");
    exit(1);
  }

  printf("Entre com um arquivo .txt: ");
  fgets(arq, 50, stdin);
  arq[strcspn(arq, "\n")] = '\0';
  FILE *arquivo = fopen(arq, "r");
  if(arquivo == NULL)
  {
    printf("Falha ao abrir o arquivo.\n");
    free(arq);
    exit(1);
  }

  int i = 0;
  int ch;
  while ((ch = fgetc(arquivo)) != EOF)
  {
    if (EhVogal(ch))
        i++;
  }

  fclose(arquivo);
  printf("Vogais presentes em %s: %d\n", arq, i);
  free(arq);

  return 0;
}

int EhVogal(char c)
{
  c = tolower(c);
  if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')
      return 1;
  return 0;
}


==============

Ex2: 

==============

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

int EhVogal(char c);

int main(void)
{
  char *arq = malloc(50 * sizeof(char));
  if(arq == NULL)
  {
    printf("Falha ao alocar mem칩ria.\n");
    exit(1);
  }

  printf("Entre com um arquivo .txt: ");
  fgets(arq, 50, stdin);
  arq[strcspn(arq, "\n")] = '\0';
  FILE *arquivo = fopen(arq, "r");
  if(arquivo == NULL)
  {
    printf("Falha ao abrir o arquivo.\n");
    free(arq);
    exit(1);
  }

  int vogais = 0, consoantes = 0;
  int ch;
  while ((ch = fgetc(arquivo)) != EOF)
  {
    if (EhVogal(ch))
        vogais++;
    else if(isalpha(ch))
      consoantes++;
  }

  fclose(arquivo);
  printf("Vogais presentes em %s: %d\n", arq, vogais);
  printf("Consoantes presentes em %s: %d\n", arq, consoantes);
  free(arq);
  
  return 0;
}

int EhVogal(char c)
{
  c = tolower(c);
  if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')
      return 1;
  return 0;
}

==============

Ex3: 

==============

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

int main(void)
{
  char *arq = malloc(50 * sizeof(char));
  if(arq == NULL)
  {
    printf("Falha ao alocar mem칩ria.\n");
    exit(1);
  }

  printf("Entre com um arquivo .txt: ");
  fgets(arq, 50, stdin);
  arq[strcspn(arq, "\n")] = '\0';
  FILE *arquivo = fopen(arq, "r");
  if(arquivo == NULL)
  {
    printf("Falha ao abrir o arquivo.\n");
    free(arq);
    exit(1);
  }

  char ch;
  printf("Entre com um caractere: ");
  scanf("%c", &ch);
  ch = tolower(ch);

  int qtd = 0;
  int chars;
  while((chars = fgetc(arquivo)) != EOF)
  {
    if(tolower(chars) == ch)
      qtd++;
  }

  fclose(arquivo);
  printf("%c aparece  %d vezes em %s.\n", ch, qtd, arq);
  free(arq);

  return 0;
}


==============

Ex4: 

==============

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

void contar_letras(int ch, int letras[]);

int main(void)
{
  char *arq = malloc(50 * sizeof(char));
  if(arq == NULL)
  {
    printf("Falha ao alocar memoria.\n");
    exit(1);
  }

  printf("Entre com um arquivo .txt: ");
  fgets(arq, 50, stdin);
  arq[strcspn(arq, "\n")] = '\0';

  FILE *arquivo = fopen(arq, "r");
  if(arquivo == NULL)
  {
    printf("Falha ao abrir o arquivo.\n");
    free(arq);
    exit(1);
  }

  int letras[26] = {0};
  int ch;
  while((ch = fgetc(arquivo)) != EOF)
  {
    if(isalpha(ch))
      contar_letras(tolower(ch), letras);
  }

  fclose(arquivo);
  int i;
  for(i = 0; i < 26; i++)
    printf("%c: %d\n", 'A' + i, letras[i]);
  free(arq);

  return 0;
}

void contar_letras(int ch, int letras[])
{
  if(ch >= 'a' && ch <= 'z')
    letras[ch - 'a']++;
}


==============

Ex5: 

==============

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

int EhVogal(char ch);

int main(void)
{
  char *arq = malloc(50 * sizeof(char));
  if(arq == NULL)
  {
    printf("Falha ao alocar memoria.\n");
    exit(1);
  }

  printf("Entre com um arquivo .txt: ");
  fgets(arq, 50, stdin);
  arq[strcspn(arq, "\n")] = '\0';

  FILE *arquivo = fopen(arq, "r");
  if(arquivo == NULL)
  {
    printf("Falha ao abrir o arquivo.\n");
    free(arq);
    exit(1);
  }

  fseek(arquivo, 0, SEEK_END);
  int tamanho = ftell(arquivo);
  rewind(arquivo);

  char *texto_original = malloc(tamanho + 1);
  char *novo_texto = malloc(tamanho + 1);
  if (texto_original == NULL || novo_texto == NULL)
  {
    printf("Falha ao alocar memoria.\n");
    fclose(arquivo);
    free(arq);
    exit(1);
  }

  fread(texto_original, 1, tamanho, arquivo);
  texto_original[tamanho] = '\0';

  fclose(arquivo);

  int i;
  for (i = 0; i < tamanho; i++)
  {
    if (EhVogal(texto_original[i]))
      novo_texto[i] = '*';
    else
      novo_texto[i] = texto_original[i];
  }
  novo_texto[tamanho] = '\0';

  FILE *novo_arquivo = fopen("arquivo_sem_vogal.txt", "w");
  if (novo_arquivo == NULL)
  {
    printf("Falha ao criar o arquivo.\n");
    free(texto_original);
    free(novo_texto);
    free(arq);
    exit(1);
  }

  fputs(novo_texto, novo_arquivo);
  fclose(novo_arquivo);

  free(texto_original);
  free(novo_texto);
  free(arq);

  return 0;
}

int EhVogal(char ch)
{
  ch = tolower(ch);
  if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u')
    return 1;
  return 0;
}


==============

Ex6:

==============

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

int main(void)
{
  char *arq = malloc(50 * sizeof(char));
  if(arq == NULL)
  {
    printf("Falha ao alocar memoria.\n");
    exit(1);
  }

  printf("Entre com um arquivo .txt: ");
  fgets(arq, 50, stdin);
  arq[strcspn(arq, "\n")] = '\0';

  FILE *arquivo = fopen(arq, "r");
  if(arquivo == NULL)
  {
    printf("Falha ao abrir o arquivo.\n");
    free(arq);
    exit(1);
  }

  fseek(arquivo, 0, SEEK_END);
  int tamanho = ftell(arquivo);
  rewind(arquivo);

  char *texto_original = malloc(tamanho + 1);
  char *novo_texto = malloc(tamanho + 1);
  if (texto_original == NULL || novo_texto == NULL)
  {
    printf("Falha ao alocar memoria.\n");
    fclose(arquivo);
    free(arq);
    exit(1);
  }

  fread(texto_original, 1, tamanho, arquivo);
  texto_original[tamanho] = '\0';

  fclose(arquivo);

  int i;
  for (i = 0; i < tamanho; i++)
    novo_texto[i] = toupper(texto_original[i]);
  novo_texto[tamanho] = '\0';

  char *novo_arq = malloc(50 * sizeof(char));
  if(novo_arq == NULL)
  {
    printf("Falha ao alocar memoria.\n");
    exit(1);
  }

  printf("Entre o nome do novo arquivo .txt: ");
  fgets(novo_arq, 50, stdin);
  novo_arq[strcspn(novo_arq, "\n")] = '\0';

  FILE *novo_arquivo = fopen(novo_arq, "w");
  if(novo_arquivo == NULL)
  {
    printf("Falha ao criar o arquivo.\n");
    free(texto_original);
    free(novo_texto);
    free(arq);
    free(novo_arq);
    exit(1);
  }

  fputs(novo_texto, novo_arquivo);
  fclose(novo_arquivo);

  free(texto_original);
  free(novo_texto);
  free(arq);
  free(novo_arq);

  return 0;
}


==============

Ex7:

==============



==============

Ex8:

==============



==============

Ex9:

==============



==============
