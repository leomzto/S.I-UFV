Aula Prática 5

Nome: Leonardo Padovani Manzato
Matricula: 9862

Ex1: 

==============

#include <stdio.h>

int main(void)
{
    int mat[4][4];
    int l, c;
    int index;

    for (l = 0; l < 4; l++)
    {
        for (c = 0; c < 4; c++)
        {
            printf("Matriz[%d][%d]: ", l + 1, c + 1);
            scanf("%d", &mat[l][c]);
        }
    }

    printf("Matriz[4][4]:\n");
    for (l = 0; l < 4; l++)
    {
        for (c = 0; c < 4; c++)
            printf("%d ", mat[l][c]);

        printf("\n");
    }

    printf("Pares[4][4] ->\n");
    for (l = 0; l < 4; l++)
    {
        for (c = 0; c < 4; c++)
        {
            if (mat[l][c] % 2 == 0)
                printf("[%d][%d] --> %d \n", l + 1, c + 1, mat[l][c]);
        }
    }

    return 0;
}


==============

Ex2: 

==============

#include <stdio.h>

int main(void)
{
    int mat[5][5];
    int l, c;

    for (l = 0; l < 5; l++)
    {
        for (c = 0; c < 5; c++)
        {
            printf("Matriz[%d][%d]: ", l + 1, c + 1);
            scanf("%d", &mat[l][c]);
        }
    }
    printf("\n");

/*
    printf("Matriz[5][5] ->\n");
    for (l = 0; l < 5; l++)
    {
        for (c = 0; c < 5; c++)
            printf("%d ", mat[l][c]);

        printf("\n");
    }
    printf("\n");
*/

    printf("Elementos da diagonal principal ->\n");
    for (l = 0; l < 5; l++)
    {
        for (c = 0; c < 5; c++)
        {
            if (l == c)
                printf("%d ", mat[l][c]);
        }
    }
    printf("\n");

    return 0;
}


==============

Ex3: 

==============

// exercicio repetido, igual ao 01, vou fazer para ao inves de numeros pares, imprimir os impares.
#include <stdio.h>

int main(void)
{
    int mat[4][4];
    int l, c;

    for (l = 0; l < 4; l++)
    {
        for (c = 0; c < 4; c++)
        {
            printf("Matriz[%d][%d]: ", l + 1, c + 1);
            scanf("%d", &mat[l][c]);
        }
    }

    printf("Matriz[4][4] ->\n");
    for (l = 0; l < 4; l++)
    {
        for (c = 0; c < 4; c++)
            printf("%d ", mat[l][c]);

        printf("\n");
    }

    printf("Impares[4][4] ->\n");
    for (l = 0; l < 4; l++)
    {
        for (c = 0; c < 4; c++)
        {
            if (mat[l][c] % 2 != 0)
                printf("[%d][%d] --> %d \n", l + 1, c + 1, mat[l][c]);
        }
    }

    return 0;
}


==============

Ex4: 

==============

#include <stdio.h>

#define TAM 3

int main(void)
{
    float mat[TAM][TAM];
    int l, c;
    float soma = 0.0;
    float media;

    for (l = 0; l < TAM; l++)
    {
        for (c = 0; c < TAM; c++)
        {
            printf("Matriz[%d][%d]: ", l + 1, c + 1);
            scanf("%f", &mat[l][c]);
        }
    }

    for (l = 0; l < TAM; l++)
    {
        for (c = 0; c < TAM; c++)
            soma += mat[l][c];
    }

    media = soma / (TAM * TAM);
    printf("\nMedia de mat[%d][%d] -> %.2f", TAM, TAM, media);

    printf("\n");

    return 0;
}


==============

Ex5: 

==============

#include <stdio.h>

int main(void)
{
    int mat[3][3];
    int l, c;
    int maior, menor;

    for (l = 0; l < 3; l++)
    {
        for (c = 0; c < 3; c++)
        {
            printf("Matriz[%d][%d]: ", l + 1, c + 1);
            scanf("%d", &mat[l][c]);
        }
    }

    maior = menor = mat[0][0];

    for (l = 0; l < 3; l++)
    {
        for (c = 0; c < 3; c++)
        {
            if (mat[l][c] > maior)
                maior = mat[l][c];

            if (mat[l][c] < menor)
                menor = mat[l][c];
        }
    }

    printf("Maior -> %d\n", maior);
    printf("Menor -> %d\n", menor);

    return 0;
}


==============

Ex6:

==============

#include <stdio.h>
#include <ctype.h>


int ehVogal(char caracter);

int main(void)
{
    char string[501];
    int i, qtd_vogal = 0, qtd_nao_vogal = 0;
    int minimo = 10;
    int tam = 0;

    printf("Digite uma string[10]: ");
    fgets(string, sizeof(string), stdin);

    while (string[tam] != '\0')
        tam++;

    if (tam < minimo)
    {
        printf("String muito pequena, deve ter no minimo 10 caracteres.\n");
        
        return 1;
    }

    printf("Vogais -> ");
    for (i = 0; string[i] != '\0'; i++)
    {
        if(ehVogal(string[i]))
        {
            printf(" %c ", string[i]);
            qtd_vogal++;
        }
        else
        {
            if (isalpha(string[i]))
                qtd_nao_vogal++;
        }
    }
    printf("\n");

    printf("Quantidade de vogais: %d\n", qtd_vogal);
    printf("Quantidade de não vogais: %d\n", qtd_nao_vogal);

    return 0;
}

int ehVogal(char caracter)
{
    caracter = tolower(caracter);
    return (caracter == 'a' || caracter == 'e' || caracter == 'i' || caracter == 'o' || caracter == 'u');
}


==============

Ex7:

==============

#include <stdio.h>
#include <stdbool.h>

int main(void)
{
    char string[501], string_contra[501];
    int i, j;
    bool iguais = true;

    printf("Entre com uma string: ");
    fgets(string, sizeof(string), stdin);

    for (j = 0; string[j] != '\0' && string[j] != '\n'; j++);

    j--;

    for (i = 0; i < j; i++, j--)
        string_contra[i] = string[j];

    string_contra[i] = '\0';

    for (i = 0; string[i] != '\0' && string_contra[i] != '\0'; i++)
    {
        if (string[i] != string_contra[i])
        {
            iguais = false;
            break;
        }
    }

    if (iguais)
        printf("É um palindromo.\n");
    else
        printf("Não é um palindromo.\n");
    
    return 0;
}


==============

Ex8:

==============

#include <stdio.h>
#include <stdbool.h>

int main(void)
{
    char string1[501], string2[501];
    int i;
    bool iguais = true;

    printf("String 01: ");
    fgets(string1, sizeof(string1), stdin);

    printf("String 02: ");
    fgets(string2, sizeof(string2), stdin);

    for (i = 0; string1[i] != '\0' && string1[i] != '\n'; i++);
    string1[i] = '\0';

    for (i = 0; string2[i] != '\0' && string2[i] != '\n'; i++);
    string2[i] = '\0';

    for (i = 0; string1[i] != '\0' || string2[i] != '\0'; i++)
    {
        if (string1[i] != string2[i])
        {
            iguais = false;
            break;
        }
    }

    if (iguais)
        printf("As duas strings são iguais.\n");
    else
        printf("As duas strings não são iguais.\n");

    return 0;
}


==============

Ex9:

==============

#include <stdio.h>
#include <ctype.h>

int main(void)
{
    char string[51];
    int i;
    int tam = 0;

    printf("Entre com seu nome completo: ");
    fgets(string, sizeof(string), stdin);

    for (i = 0; string[i] != '\0' && string[i] != '\n'; i++)
    {
        if (isalpha(string[i]) || isspace(string[i]))
            tam++;
    }

    printf("Quantidade de caracteres em seu nome (incluindo espaços): %d\n", tam);

    return 0;
}


==============

Ex10:

==============

#include <stdio.h>
#include <ctype.h>

int ehVogal(char caracter);

int main(void)
{
    char string[501];
    int i;

    printf("Entre com uma string: ");
    fgets(string, sizeof(string), stdin);


    printf("Consoantes -> ");
    for (i = 0; string[i] != '\0' && string[i] != '\n'; i++)
    {
        if (isalpha(string[i]) && !ehVogal(string[i]))
            printf(" %c", string[i]);
    }
    printf("\n");

    return 0;
}

int ehVogal(char caracter)
{
    caracter = tolower(caracter);
    return (caracter == 'a' || caracter == 'e' || caracter == 'i' || caracter == 'o' || caracter == 'u');
}


==============

Ex11:

==============

#include <stdio.h>
#include <ctype.h>

int main(void)
{
    char nome[51], sobrenome[51], terceiro_nome[51];
    char concatenacao[153];
    int i = 0, j;

    printf("Nome: ");
    fgets(nome, sizeof(nome), stdin);

    printf("Sobrenome: ");
    fgets(sobrenome, sizeof(sobrenome), stdin);

    printf("3° Nome: ");
    fgets(terceiro_nome, sizeof(terceiro_nome), stdin);

    for (j = 0; nome[j] != '\0' && nome[j] != '\n'; j++)
    {
        nome[0] = toupper(nome[0]);
        concatenacao[i++] = nome[j];
    }

    for (j = 0; sobrenome[j] != '\0' && sobrenome[j] != '\n'; j++)
    {
        sobrenome[0] = toupper(sobrenome[0]);
        concatenacao[i++] = sobrenome[j];
    }

    for (j = 0; terceiro_nome[j] != '\0' && terceiro_nome[j] != '\n'; j++)
    {
        terceiro_nome[0] = toupper(terceiro_nome[0]);
        concatenacao[i++] = terceiro_nome[j];
    }

    concatenacao[i] = '\0';

    printf("Concatenação: %s\n", concatenacao);

    return 0;
}

==============
